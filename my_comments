Доброго дня, задача была сделать следующее тестовое задание

Используя Percona MySQL 8.0.23, Python 3.6 и Flask разработать REST API,
обеспечивающий проверку Request и Response данных и документацию в Swagger UI.


REST API должен иметь следующий функционал:
1. Создание и авторизацию пользователя по паре login/password.
2. Каждый авторизованный пользователь должен иметь возможность ввода и редактирования своего профиля (имя, аватар).
3. Каждый авторизованный пользователь должен иметь возможность создания списка товаров, доступных только ему.
4. Каждый товар должен иметь уникальный идентификатор, артикул (уникален в пределах списка товаров пользователя),
 название и картинку.
5. Товар может содержать набор цен (любое неограниченное количество) в различных валютах с условием,
что для каждой валюты может быть задана только одна цена.
6. Постраничный вывода списка товаров с возможностью фильтрации по артикулу (соответствие) и по имени (вхождение) и сортировки по артикулу или имени.


Насчёт некоторых пунктов, хочу объяснить почему было принято именно это решение

1. для аутентификации использовал JWT, так как это было в приоритете, логаут не делал (не было в тз,
но можно отдельно создать blacklist в том же redis и с его помощью инвалидировать токены)

2. Редактирование профиля,  данные с именем пользователя передаю в хедере,
так как не смог в Swagger UI настроить отдельно передачу filestorrage (formdata) и body (aplication/json)

4. "Уникальный артикул в пределах спписка товаров"
Вот тут долго выбирал между тригером в БД и методом модели, в итоге выбор пал на метод модели (жертвуя лишним обращением к БД,
но это все-таки бизнес логика и я бы хотел такое видеть глазами, щупать руками, и самому управлять этим поведением)